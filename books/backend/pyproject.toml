[tool.poetry]
name = "backend"
version = "0.1.0"
description = ""
authors = ["Nir <nrbnlulu@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
SQLAlchemy = {extras = ["asyncio"], version = "^2.0.20"}
fastapi = "^0.103.1"
pydantic-settings = "^2.0.3"
python-dotenv = "^1.0.0"
aiosqlite = "^0.19.0"
aioinject = "^0.13.0"
strawberry-graphql = "^0.205.0"
result = "^0.13.1"
uvicorn = "^0.23.2"

[tool.poetry.group.dev.dependencies]
pytest-asyncio = "^0.21.1"
alembic = "^1.12.0"
black = "^23.7.0"
isort = "^5.12.0"
pre-commit = "^3.4.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"




[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310']
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | __pycached__
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 100
select = ["ALL"]
target-version = "py310"
ignore = [
    # https://beta.ruff.rs/docs/rules/#flake8-fixme-fix
    "FIX002",
    # https://beta.ruff.rs/docs/rules/#flake8-bandit-s
    "S603",
    "S607",
    "TD002",
    "TD003",
    "E501", # Line Length
    "ANN101",
    "ANN102",
    "D10", # Disable mandatory docstrings
    "D203", # one-blank-line-before-class
    "D212", # multi-line-summary-first-line
    "PD", # pandas-vet
    "TCH001",
    "TCH002",
    "TCH003",
    "EXE",
    "A003", # shadow_builtins
    "A002",
    "N999" # invalid module name
]
src = ["backend", "tests"]


[tool.ruff.flake8-annotations]
suppress-none-returning = true

[tool.ruff.isort]
combine-as-imports = true
